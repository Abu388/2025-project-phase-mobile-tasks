// Mocks generated by Mockito 5.4.6 from annotations
// in hello_app/test/features/product/data/repositories/product_repository_impl_test.mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hello_app/features/product/data/datasources/product_local_data_source_contract.dart'
    as _i2;
import 'package:hello_app/features/product/data/datasources/product_remote_data_source_contract.dart'
    as _i4;
import 'package:hello_app/features/product/data/network/network_info.dart'
    as _i6;
import 'package:hello_app/features/product/domain/entities/product.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProductLocalDataSourceContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductLocalDataSourceContract extends _i1.Mock
    implements _i2.ProductLocalDataSourceContract {
  MockProductLocalDataSourceContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Product> getAllProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getAllProducts, []),
            returnValue: <_i3.Product>[],
          )
          as List<_i3.Product>);

  @override
  _i3.Product? getProductById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getProductById, [id]))
          as _i3.Product?);

  @override
  void createProduct(_i3.Product? product) => super.noSuchMethod(
    Invocation.method(#createProduct, [product]),
    returnValueForMissingStub: null,
  );

  @override
  void updateProduct(_i3.Product? product) => super.noSuchMethod(
    Invocation.method(#updateProduct, [product]),
    returnValueForMissingStub: null,
  );

  @override
  void deleteProduct(String? id) => super.noSuchMethod(
    Invocation.method(#deleteProduct, [id]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ProductRemoteDataSourceContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRemoteDataSourceContract extends _i1.Mock
    implements _i4.ProductRemoteDataSourceContract {
  MockProductRemoteDataSourceContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.Product>> getAllProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getAllProducts, []),
            returnValue: _i5.Future<List<_i3.Product>>.value(<_i3.Product>[]),
          )
          as _i5.Future<List<_i3.Product>>);

  @override
  _i5.Future<void> createProduct(_i3.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#createProduct, [product]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateProduct(_i3.Product? product) =>
      (super.noSuchMethod(
            Invocation.method(#updateProduct, [product]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteProduct(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProduct, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
